{
    "openapi": "3.0.0",
    "info": {
        "title": "News Aggregator API - V1",
        "description": "API documentation for version 1 of the News Aggregator system.",
        "contact": {
            "email": "support@newsaggregator.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8101/api/v1",
            "description": "Version 1 - Local development server"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log in a user",
                "operationId": "f7f011e0bdfcc161951fe0a58687fcd8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged in successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "5|aD4EQmKGlyJIHQ0IZWGWzPuLNPdvJcAOVQFgCjd06401925f"
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The provided credentials are incorrect."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": null,
                                                "nullable": true
                                            },
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the authenticated user",
                "operationId": "4f93c28cafc3e7cbfe18a64fc99e658b",
                "responses": {
                    "200": {
                        "description": "Successful logout",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        },
                                        "data": {
                                            "type": "null",
                                            "example": null
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing Bearer Token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is not authenticated."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/password/reset": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset the user's password",
                "operationId": "032ae68c3f037ce4be7de84203c68c2e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "token",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "User's email address.",
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "token": {
                                        "description": "The password reset token.",
                                        "type": "string",
                                        "example": "reset_token_example"
                                    },
                                    "password": {
                                        "description": "New password (minimum 8 characters).",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirm the new password.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "newpassword123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password has been reset successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found or token invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The reset token is invalid or user not found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "email": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    },
                                                    "token": {
                                                        "type": "string",
                                                        "example": "The token field is required."
                                                    },
                                                    "password": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    },
                                                    "password_confirmation": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "email": "The email field is required."
                                                },
                                                {
                                                    "token": "The token field is required."
                                                },
                                                {
                                                    "password": "The password field must be at least 8 characters."
                                                },
                                                {
                                                    "password_confirmation": "The password confirmation does not match."
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/password/email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset email",
                "operationId": "3b2eb69e3ab39bc97011f77fedad588a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user1@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset email sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset link sent"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "We couldn't find a user with that email address."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "email": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "email": "The email field is required."
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "384325ee6d5a1e3dfdcabe6c6265b538",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Full name of the user.",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "description": "User's email address. Must be unique.",
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "description": "User's password (minimum 8 characters).",
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the password.",
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "description": "User ID.",
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "description": "Full name of the user.",
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "description": "User's email address.",
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "user@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    },
                                                    "password": {
                                                        "type": "string",
                                                        "example": "The password field must be at least 8 characters."
                                                    },
                                                    "password_confirmation": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "example": [
                                                {
                                                    "name": "The name field is required."
                                                },
                                                {
                                                    "email": "The email field must be unique."
                                                },
                                                {
                                                    "password": "The password field must be at least 8 characters."
                                                },
                                                {
                                                    "password_confirmation": "The password confirmation does not match."
                                                }
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/news": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Retrieve a list of news articles",
                "operationId": "4f8945c9605cb7d1c92a740f981b8af8",
                "parameters": [
                    {
                        "name": "preference",
                        "in": "query",
                        "description": "User preferences to filter articles (0/1).",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "0"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "Keyword to search within article keywords.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Jarosz"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date to filter articles by their publication date.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2024-01-24"
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Category to filter articles.",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Business"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Source to filter articles (News API, The New York Times, The Guardian).",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "News API"
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of articles per page. (Maximum 50)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Number of page.",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of news articles",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Articles retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "Breaking News: AI Revolution"
                                                    },
                                                    "category": {
                                                        "type": "string",
                                                        "example": "technology"
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "published_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "example": "2023-11-17 10:00:00"
                                                    },
                                                    "keywords": {
                                                        "type": "string",
                                                        "example": "AI, Machine Learning"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "An in-depth look at how AI is transforming industries."
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "format": "url",
                                                        "example": "https://newswebsite.com/articles/1"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://api.newsaggregator.com/news?page=2"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request parameters."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid Bearer token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/news/{id}": {
            "get": {
                "tags": [
                    "News"
                ],
                "summary": "Retrieve a specific news article",
                "operationId": "f2a9e3bfd1a4e23c48c0fe7b5797a92d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the news article to retrieve.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Specific news article retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Article retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "title": {
                                                    "type": "string",
                                                    "example": "Breaking News: AI Revolution"
                                                },
                                                "category": {
                                                    "type": "string",
                                                    "example": "technology"
                                                },
                                                "author": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "published_at": {
                                                    "type": "string",
                                                    "format": "datetime",
                                                    "example": "2023-11-17 10:00:00"
                                                },
                                                "keywords": {
                                                    "type": "string",
                                                    "example": "AI, Machine Learning"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "An in-depth look at how AI is transforming industries."
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://newswebsite.com/articles/1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Article not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Article not found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid Bearer token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/preferences/{id}": {
            "put": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Update a specific preference",
                "operationId": "9a70e6b132dad20835901c88c8830395",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference to update.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "value"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "The updated type of the preference.",
                                        "type": "string",
                                        "example": "category"
                                    },
                                    "value": {
                                        "description": "The updated value of the preference.",
                                        "type": "string",
                                        "example": "science"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Preference updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preference updated successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "category"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "science"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preference not found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Delete a specific preference",
                "operationId": "0535e0806efe3592c3dd0f4fc3c3f901",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the preference to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Preference deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preference deleted successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Preference not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preference not found."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/preferences": {
            "get": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Retrieve a list of preferences",
                "operationId": "de44db4591e5baa485737cbfd5d52dce",
                "responses": {
                    "200": {
                        "description": "List of preferences retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preferences retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "example": "category"
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "technology"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Missing or invalid Bearer token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized access."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {},
                                            "example": []
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Preferences"
                ],
                "summary": "Create a new preference",
                "operationId": "beaaae8d1887adc43569a8a58f2d822f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "type",
                                    "value"
                                ],
                                "properties": {
                                    "type": {
                                        "description": "The type of the preference.",
                                        "type": "string",
                                        "example": "category"
                                    },
                                    "value": {
                                        "description": "The value of the preference.",
                                        "type": "string",
                                        "example": "technology"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Preference created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Preference created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "type": {
                                                    "type": "string",
                                                    "example": "category"
                                                },
                                                "value": {
                                                    "type": "string",
                                                    "example": "technology"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "failed"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "The type field is required."
                                                    },
                                                    "value": {
                                                        "type": "string",
                                                        "example": "The value field is required."
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Use the Bearer token provided by Sanctum to authenticate requests.",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Endpoints related to user authentication"
        },
        {
            "name": "News",
            "description": "Endpoints related to news articles"
        },
        {
            "name": "Preferences",
            "description": "Preferences"
        }
    ]
}